// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassagensAereas.Infra;

namespace PassagensAereas.Infra.Migrations
{
    [DbContext(typeof(PassagensAereasContext))]
    [Migration("20180611163435_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.ClasseVoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("ValorFixo");

                    b.Property<double>("ValorMilha");

                    b.HasKey("Id");

                    b.ToTable("ClassesVoo");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("LatitudeLocal");

                    b.Property<double>("LongitudeLocal");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Locais");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Opcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ReservaId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Opcionais");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClasseVooId");

                    b.Property<int?>("TrechoId");

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClasseVooId");

                    b.HasIndex("TrechoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.ReservaOpcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OpcionalId");

                    b.Property<int?>("ReservaId");

                    b.HasKey("Id");

                    b.HasIndex("OpcionalId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaOpcional");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Trecho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Distancia");

                    b.Property<int?>("LocalAId");

                    b.Property<int?>("LocalBId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("LocalAId");

                    b.HasIndex("LocalBId");

                    b.ToTable("Trechos");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataNascimento")
                        .HasMaxLength(10);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Opcional", b =>
                {
                    b.HasOne("PassagensAereas.Dominio.Entidades.Reserva")
                        .WithMany("Opcionais")
                        .HasForeignKey("ReservaId");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("PassagensAereas.Dominio.Entidades.ClasseVoo", "ClasseVoo")
                        .WithMany()
                        .HasForeignKey("ClasseVooId");

                    b.HasOne("PassagensAereas.Dominio.Entidades.Trecho", "Trecho")
                        .WithMany()
                        .HasForeignKey("TrechoId");

                    b.HasOne("PassagensAereas.Dominio.Entidades.Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.ReservaOpcional", b =>
                {
                    b.HasOne("PassagensAereas.Dominio.Entidades.Opcional", "Opcional")
                        .WithMany()
                        .HasForeignKey("OpcionalId");

                    b.HasOne("PassagensAereas.Dominio.Entidades.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId");
                });

            modelBuilder.Entity("PassagensAereas.Dominio.Entidades.Trecho", b =>
                {
                    b.HasOne("PassagensAereas.Dominio.Entidades.Local", "LocalA")
                        .WithMany()
                        .HasForeignKey("LocalAId");

                    b.HasOne("PassagensAereas.Dominio.Entidades.Local", "LocalB")
                        .WithMany()
                        .HasForeignKey("LocalBId");
                });
#pragma warning restore 612, 618
        }
    }
}
